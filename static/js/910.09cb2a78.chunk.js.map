{"version":3,"file":"static/js/910.09cb2a78.chunk.js","mappings":"+MA+BA,EA5BgB,SAAHA,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SACxB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACRC,SAAU,CAAC,KAAM,KAAM,KAAM,KAAM,OACnCC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAU,wBACVC,WAAY,OACZC,cAAe,OACfC,GAAI,CACFC,gBAAiB,wBACjBC,eAAgB,YAChBC,OAAQ,kBACRC,aAAc,QACdd,SAAA,EAEFe,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,GAAI,EAAEjB,SAAED,IAChBC,IAGP,C,gECbA,UARiB,WACf,OACEe,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACnB,MAAM,qBAAoBC,UACjCe,EAAAA,EAAAA,KAAA,KAAAf,SAAG,cAGT,C,2KCuBaE,GAAYiB,EAAAA,EAAAA,IAAkC,SACzDC,EACAC,GAEA,IAAAC,GAA8CC,EAAAA,EAAAA,IAAiBH,GAAvDI,EAAAF,EAAAE,UAAWC,EAAAH,EAAAG,cAAkBC,GAAAC,EAAAA,EAAAA,GAAAL,EAAAM,GAE/BC,GAASC,EAAAA,EAAAA,IAAe,YAAaV,GAE3C,OACEW,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,KAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNb,IAAAA,EACAG,WAAWW,EAAAA,EAAAA,IAAG,mBAAoBX,IAC9BE,GAAA,IACJU,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKL,GACCJ,GAAiB,CACnBY,QAAS,OACTC,cAAe,SACfC,WAAY,aAKtB,IAEArC,EAAUsC,YAAc,W,2JCpCXxB,GAAUG,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMQ,GAASC,EAAAA,EAAAA,IAAe,UAAWV,GACzCE,GAA+BC,EAAAA,EAAAA,IAAiBH,GAA1BM,GAAdJ,EAAAE,WAAcG,EAAAA,EAAAA,GAAAL,EAAAM,IAEtB,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAOS,IAAAP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNb,IAAAA,EACAG,WAAWW,EAAAA,EAAAA,IAAG,iBAAkBf,EAAMI,YAClCE,GAAA,IACJU,MAAOP,IAGb,IAEAb,EAAQwB,YAAc,S","sources":["components/Section/Section.jsx","pages/Contacts.jsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { Container, Heading } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container\n      maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform='translate(-50%, -50%)'\n      paddingTop={'40px'}\n      paddingBottom={'40px'}\n      sx={{\n        backgroundColor: 'hsla(0, 0%, 10%, 0.5)',\n        backdropFilter: 'blur(8px)',\n        border: '2px solid white',\n        borderRadius: '1rem',\n      }}\n    >\n      <Heading pl={8}>{title}</Heading>\n      {children}\n    </Container>\n  )\n};\n\nSection.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n}\n\nexport default Section;","import Section from 'components/Section'\nimport React from 'react'\n\nconst Contacts = () => {\n  return (\n    <Section title=\"Contacts PhoneBook\">\n      <p>Contacts</p>\n    </Section>\n  )\n}\n\nexport default Contacts;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["_ref","title","children","_jsxs","Container","maxWidth","position","top","left","transform","paddingTop","paddingBottom","sx","backgroundColor","backdropFilter","border","borderRadius","_jsx","Heading","pl","Section","forwardRef","props","ref","_omitThemingProps","omitThemingProps","className","centerContent","rest","_objectWithoutProperties","_excluded","styles","useStyleConfig","jsx","chakra","div","_objectSpread","cx","__css","display","flexDirection","alignItems","displayName","h2"],"sourceRoot":""}