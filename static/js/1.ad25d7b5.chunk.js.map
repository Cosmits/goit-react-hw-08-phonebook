{"version":3,"file":"static/js/1.ad25d7b5.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","../node_modules/@chakra-ui/layout/src/list.tsx","pages/Home.jsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { Container, Heading } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container\n      maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform='translate(-50%, -50%)'\n      paddingTop={'40px'}\n      paddingBottom={'40px'}\n      sx={{\n        backgroundColor:  'hsla(0, 0%, 10%, 0.35)',\n        backdropFilter: 'blur(8px)',\n        border: '2px solid',\n        borderRadius: '1rem',\n      }}\n    >\n      <Heading pl={8}>{title}</Heading>\n      {children}\n    </Container>\n  )\n};\n\nSection.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n}\n\nexport default Section;","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import { Box, ListItem, Text, UnorderedList } from '@chakra-ui/react';\nimport Section from 'components/Section'\n\nconst Home = () => {\n  return (\n    <Section title=\"PhoneBook\">\n      <Box mt={'12px'}>\n        <Text ml={8}>In PhoneBook  application used:</Text>\n        <UnorderedList ml={'12px'}>\n          <ListItem ml={'52px'}>React, React router</ListItem>\n          <ListItem ml={'52px'}>Redux, Redux Toolkit, RTK Query</ListItem>\n          <ListItem ml={'52px'}>Redux Persist</ListItem>\n          <ListItem ml={'52px'}>Chakra UI</ListItem>\n          <ListItem ml={'52px'}>React-toastify</ListItem>\n        </UnorderedList>\n      </Box>\n    </Section>\n  )\n}\nexport default Home;","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["_ref","title","children","_jsxs","Container","maxWidth","position","top","left","transform","paddingTop","paddingBottom","sx","backgroundColor","backdropFilter","border","borderRadius","_jsx","Heading","pl","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","spacingStyle","_defineProperty","mt","jsx","value","chakra","ul","_objectSpread","listStyleType","listStylePosition","role","__css","container","displayName","as","_excluded2","marginStart","UnorderedList","_excluded3","ListItem","li","item","Icon","icon","Section","Box","Text","ml","className","centerContent","useStyleConfig","div","cx","display","flexDirection","alignItems","h2"],"sourceRoot":""}