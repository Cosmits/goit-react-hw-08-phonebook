{"version":3,"file":"static/js/575.19513112.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ModalWindow/ModalWindow.jsx","components/_Forms/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/FilterInput/FilterInput.styled.jsx","components/FilterInput/FilterInput.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Container, Heading } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container\n      maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform='translate(-50%, -50%)'\n      paddingTop={'40px'}\n      paddingBottom={'40px'}\n      sx={{\n        backgroundColor:  'hsla(0, 0%, 10%, 0.5)',\n        backdropFilter: 'blur(8px)',\n        border: '2px solid',\n        borderRadius: '1rem',\n      }}\n    >\n      <Heading pl={8}>{title}</Heading>\n      {children}\n    </Container>\n  )\n};\n\nSection.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n}\n\nexport default Section;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  margin-top: 12px;\n`;","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 5px;\n  border: 2px solid;\n\n   /* & button:hover {\n    background-color: greenyellow;\n  } */\n\n  & + li {\n    margin-top: 12px;\n  }\n\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-weight: 500;\n  padding-left: 5px;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n`;\n\n// export const Button = styled.button`\n//   cursor: pointer;\n//   background-color: white;\n//   border-radius: 5px;\n//   border: 2px solid lightgray;\n//   padding: 10px;\n//   transition: background-color 250ms linear;\n// `;\n","import PropTypes from 'prop-types';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n\nconst ModalWindow = ({ isOpen, onClose, title, children }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} variant='sunset'>\n      <ModalOverlay\n        backdropFilter='auto'\n        backdropBlur='4px'\n      />\n      <ModalContent>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {children}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n};\n\nModalWindow.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  children: PropTypes.any,\n}\n\nexport default ModalWindow;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\n\nimport { Button, FormControl, Icon, Input, InputGroup, InputLeftElement, Stack } from '@chakra-ui/react';\nimport { FiUser, FiPhone, FiUserPlus } from \"react-icons/fi\";\nimport { useAddContactMutation, useEditContactMutation } from 'redux/rtkAPI/contactsApi';\nimport { selectContacts, selectToken } from 'redux/selectors';\nexport default function ContactForm({ onClose, editContact }) {\n\n  const [name, setName] = useState('');\n  const [id, setID] = useState('');\n  const [number, setNumber] = useState('');\n  const formReset = () => {\n    setName('');\n    setNumber('');\n    setID('');\n  };\n\n  const token = useSelector(selectToken);\n  const contacts = useSelector(selectContacts);\n\n  const [addContactRequest,] = useAddContactMutation();\n  const [editContactRequest,] = useEditContactMutation();\n  //================================================================\n\n  useEffect(() => {\n    if (editContact) {\n      setName(editContact.name);\n      setNumber(editContact.number);\n      setID(editContact.id);\n    }\n  }, [editContact]);\n\n  //================================================================\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // edit\n    if (editContact) {\n      const editUser = {\n        id: id,\n        name,\n        number,\n      }\n      editContactRequest({ token, editUser });\n      formReset();\n      onClose();\n\n    // add contact\n    } else {\n      const filterTrue = contacts.some(contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n        || contact.number.toLowerCase().trim() === number.toLowerCase().trim());\n\n      if (filterTrue) {\n        toast.warn(`${name}: ${number} is duplicate contact or number`)\n      } else {\n        addContactRequest({ token, newUser: { name, number } })\n        formReset();\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"on\">\n      <Stack spacing={4} mt={8}>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiUser} mr={'8px'} />\n            </InputLeftElement>\n            <Input type=\"text\" name=\"fullName\" placeholder='Enter full name'\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              onChange={handleChangeName}\n              value={name}\n            />\n          </InputGroup>\n        </FormControl>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiPhone} mr={'8px'} />\n            </InputLeftElement>\n            <Input type=\"tel\" name=\"number\" placeholder='Enter phone number'\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              onChange={handleChangeNumber}\n              value={number}\n            />\n          </InputGroup>\n        </FormControl>\n        {id ? (<Button type='submit'><Icon as={FiUserPlus} mr={'8px'} />Edit contact</Button>)\n          : (<Button type='submit'><Icon as={FiUserPlus} mr={'8px'} />Add contact</Button>)}\n\n      </Stack>\n\n    </form>\n\n  );\n}\n\n\nContactForm.propTypes = {\n  onClose: PropTypes.func,\n  editContact: PropTypes.any,\n}","import PropTypes from 'prop-types';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n} from './ContactItem.styled';\nimport { useDelContactMutation } from 'redux/rtkAPI/contactsApi';\nimport { useSelector } from 'react-redux';\nimport { selectToken } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { Box, Button, Icon, useDisclosure } from '@chakra-ui/react';\nimport { FiTrash2, FiEdit } from \"react-icons/fi\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ModalWindow from 'components/ModalWindow';\nimport ContactForm from 'components/_Forms/ContactForm';\n\nconst ContactsItem = ({ id, name, number }) => {\n  \n  const token = useSelector(selectToken);\n  \n  const { isOpen, onOpen, onClose } = useDisclosure();\n  \n  const [deleteContact, { data, error, isError }] = useDelContactMutation();\n\n  useEffect(() => {\n    if (isError) toast.error(error);\n    if (data) console.log(\" data:\", data)\n  }, [data, error, isError])\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        {name}:<ContactNumber>{number}</ContactNumber>\n      </ContactName>\n      <Box>\n        <Button onClick={() => onOpen()} mr={'8px'} mt={'2px'} mb={'2px'} > <Icon as={FiEdit} /></Button>\n        <Button onClick={() => deleteContact({ token, id })} mr={'2px'} mt={'2px'} mb={'2px'}> <Icon as={FiTrash2} /></Button>\n      </Box>\n\n      <ModalWindow isOpen={isOpen} onClose={onClose} title={'Edit contact'}>\n        <ContactForm onClose={onClose} editContact={{id, name, number}} />\n      </ModalWindow>\n    </ContactItem>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem","import { Box, Text } from '@chakra-ui/react';\nimport { List } from './ContactsList.styled';\nimport ContactsItem from 'components/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGetAllContactsQuery } from 'redux/rtkAPI/contactsApi';\nimport { selectToken, selectVisibleContacts } from 'redux/selectors';\nimport Loader from 'components/Loader';\nimport { useEffect } from 'react';\nimport { setContactSlice } from 'redux/contactsSlice';\n\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst ContactsList = () => {\n\n  const token = useSelector(selectToken);\n  const filteredContacts = useSelector(selectVisibleContacts)\n  \n  const dispatch = useDispatch();\n  \n  const { data: contacts, isSuccess, isFetching, isError } = useGetAllContactsQuery(token, {\n    skip: !token,\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(setContactSlice(contacts));\n    }\n\n    if (isError) {\n      // dispatch(setUserSlice(defUser));\n      toast.warn('Please enter a valid email or password');\n    }\n  }, [contacts, dispatch, isError, isSuccess]);\n\n  return (\n    <Box>\n      {isFetching && <Loader />}\n      <List>\n        {filteredContacts.length === 0 && <Text>There are no contacts found!</Text>}\n        {filteredContacts && filteredContacts.map(({ name, number, id }) => (\n          <ContactsItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ContactsList;","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin-top: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  font-size: 14px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './FilterInput.styled';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilterSlice } from 'redux/filterSlice';\n\n\n\nconst FilterInput = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleChangeFilter = (event) => {\n    dispatch(setFilterSlice(event.target.value.toLowerCase()))\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n\nexport default FilterInput;","import { Box, Button, useDisclosure } from '@chakra-ui/react';\nimport ContactsList from 'components/ContactsList';\nimport FilterInput from 'components/FilterInput';\nimport ModalWindow from 'components/ModalWindow';\nimport Section from 'components/Section'\nimport ContactForm from 'components/_Forms/ContactForm';\n\nconst Contacts = () => {\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Section title=\"Contacts PhoneBook\">\n      <FilterInput />\n      <Box marginTop={4}><Button onClick={onOpen}>Add new contact</Button></Box>\n      <ContactsList />\n\n      \n      <ModalWindow isOpen={isOpen} onClose={onClose} title={'Add new contact'}>\n        <ContactForm onClose={onClose} />\n      </ModalWindow>\n    </Section>\n  )\n}\n\nexport default Contacts;\n"],"names":["_ref","title","children","_jsxs","Container","maxWidth","position","top","left","transform","paddingTop","paddingBottom","sx","backgroundColor","backdropFilter","border","borderRadius","_jsx","Heading","pl","List","styled","ul","_templateObject","_taggedTemplateLiteral","ContactItem","li","ContactName","p","_templateObject2","ContactNumber","span","_templateObject3","isOpen","onClose","Modal","variant","ModalOverlay","backdropBlur","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ContactForm","editContact","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","id","setID","_useState5","_useState6","number","setNumber","formReset","token","useSelector","selectToken","contacts","selectContacts","_useAddContactMutatio","useAddContactMutation","addContactRequest","_useEditContactMutati","useEditContactMutation","editContactRequest","useEffect","onSubmit","event","preventDefault","editUser","some","contact","toLowerCase","trim","toast","warn","concat","newUser","autoComplete","Stack","spacing","mt","FormControl","isRequired","InputGroup","InputLeftElement","pointerEvents","Icon","as","FiUser","mr","Input","type","placeholder","pattern","onChange","currentTarget","value","FiPhone","Button","FiUserPlus","_useDisclosure","useDisclosure","onOpen","_useDelContactMutatio","useDelContactMutation","_useDelContactMutatio2","deleteContact","_useDelContactMutatio3","data","error","isError","console","log","Box","onClick","mb","FiEdit","FiTrash2","ModalWindow","filteredContacts","selectVisibleContacts","dispatch","useDispatch","_useGetAllContactsQue","useGetAllContactsQuery","skip","isSuccess","isFetching","setContactSlice","Loader","length","Text","map","ContactsItem","Label","label","input","filter","selectFilter","setFilterSlice","target","Section","FilterInput","marginTop","ContactsList"],"sourceRoot":""}