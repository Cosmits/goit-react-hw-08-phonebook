{"version":3,"file":"static/js/854.2d78d2b9.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","components/_Forms/SignUpForm/SignUpForm.jsx","pages/SignUp.jsx"],"sourcesContent":["import { Container, Heading } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container\n      maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n      position={'absolute'}\n      top={'50%'}\n      left={'50%'}\n      transform='translate(-50%, -50%)'\n      paddingTop={'40px'}\n      paddingBottom={'40px'}\n      sx={{\n        backgroundColor:  'hsla(0, 0%, 10%, 0.5)',\n        backdropFilter: 'blur(8px)',\n        border: '2px solid',\n        borderRadius: '1rem',\n      }}\n    >\n      <Heading pl={8}>{title}</Heading>\n      {children}\n    </Container>\n  )\n};\n\nSection.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n}\n\nexport default Section;","import { Button, FormControl, Icon, Input, InputGroup, InputLeftElement, InputRightElement, Stack } from \"@chakra-ui/react\"\nimport { useEffect, useState } from \"react\"\nimport { FiUser, FiMail, FiLock, FiLogIn } from \"react-icons/fi\";\nimport { useDispatch } from \"react-redux\";\nimport { useSignUpMutation } from \"redux/rtkAPI/authApi\";\nimport { defUser, setUserSlice } from \"redux/userSlice\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst SignUpForm = () => {\n\n  const [show, setShow] = useState(false)\n  const handleClick = () => setShow(!show)\n\n  const [loginForm, { data, isSuccess, isError }] = useSignUpMutation();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const password1 = form.elements.password1.value;\n    const password2 = form.elements.password2.value;\n\n    if (password1 !== password2) return toast.error('Please retype a password');\n\n    try {\n      const newUser = {\n        name: form.elements.fullName.value,\n        email: form.elements.email.value,\n        password: form.elements.password1.value,\n      }\n      await loginForm(newUser);\n\n      // if (isSuccess) form.reset();\n    } catch (error) {\n      console.error(error);\n    }\n\n  }\n\n  useEffect(() => {\n    if (isSuccess) {\n      const newData = {\n        user: data.user,\n        token: data.token,\n        registered: true,\n      }\n      dispatch(setUserSlice(newData));\n    }\n\n    if (isError) {\n      dispatch(setUserSlice(defUser));\n      toast.error('This email was registered');\n    }\n  }, [data, dispatch, isSuccess, isError]);\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"on\">\n      <Stack spacing={4} mt={8}>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiUser} mr={'8px'} />\n            </InputLeftElement>\n            <Input type=\"text\" name=\"fullName\" placeholder='Full name' />\n          </InputGroup>\n        </FormControl>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiMail} mr={'8px'} />\n            </InputLeftElement>\n            <Input type=\"email\" name=\"email\" placeholder='Enter e-mail...' />\n          </InputGroup>\n        </FormControl>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiLock} mr={'8px'} />\n            </InputLeftElement>\n            <Input\n              name=\"password1\"\n              minLength='4'\n              pr='4.5rem'\n              type={show ? 'text' : 'password'}\n              placeholder='Enter password'\n            />\n            <InputRightElement width='4.5rem'>\n              <Button h='1.75rem' size='sm' onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n\n        <FormControl isRequired >\n          <InputGroup>\n            <InputLeftElement pointerEvents='none'>\n              <Icon as={FiLock} mr={'8px'} />\n            </InputLeftElement>\n            <Input\n              name=\"password2\"\n              minLength='4'\n              pr='4.5rem'\n              type={show ? 'text' : 'password'}\n              placeholder='Repeat password'\n            />\n            <InputRightElement width='4.5rem'>\n              <Button h='1.75rem' size='sm' onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n\n        <Button type='submit'><Icon as={FiLogIn} mr={'8px'} />Register new user</Button>\n\n      </Stack>\n\n    </form>\n  )\n}\n\nexport default SignUpForm;","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectRegistered } from 'redux/selectors';\n\nimport Section from 'components/Section'\nimport SignUpForm from 'components/_Forms/SignUpForm';\n\nconst SignUp = () => {\n\n  const registered = useSelector(selectRegistered)\n  if (registered) return <Navigate to='/contacts' />\n  return (\n    <Section title=\"SignUp PhoneBook\">\n      <SignUpForm />\n    </Section>\n  )\n}\n\nexport default SignUp;"],"names":["_ref","title","children","_jsxs","Container","maxWidth","position","top","left","transform","paddingTop","paddingBottom","sx","backgroundColor","backdropFilter","border","borderRadius","_jsx","Heading","pl","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClick","_useSignUpMutation","useSignUpMutation","_useSignUpMutation2","loginForm","_useSignUpMutation2$","data","isSuccess","isError","dispatch","useDispatch","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","form","password1","password2","newUser","wrap","_context","prev","next","preventDefault","currentTarget","elements","value","abrupt","toast","error","name","fullName","email","password","t0","console","stop","_x","apply","arguments","useEffect","newData","user","token","registered","setUserSlice","defUser","onSubmit","autoComplete","Stack","spacing","mt","FormControl","isRequired","InputGroup","InputLeftElement","pointerEvents","Icon","as","FiUser","mr","Input","type","placeholder","FiMail","FiLock","minLength","pr","InputRightElement","width","Button","h","size","onClick","FiLogIn","useSelector","selectRegistered","Navigate","to","Section","SignUpForm"],"sourceRoot":""}